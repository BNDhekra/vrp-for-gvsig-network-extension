/*
 * OdMatrixControlPanel.java
 *
 * Created on 20 de octubre de 2008, 13:19
 */

package org.gvsig.graph.vrp;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.util.Vector;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import org.gvsig.exceptions.BaseException;
import org.gvsig.fmap.util.LayerListCellRenderer;
import org.gvsig.graph.IODMatrixFileWriter;
import org.gvsig.graph.ODMatrixExtension;
import org.gvsig.graph.vrp.gui.VRPControlPanel;

import com.iver.andami.PluginServices;
import com.iver.andami.ui.mdiManager.IWindow;
import com.iver.andami.ui.mdiManager.WindowInfo;
import com.iver.cit.gvsig.fmap.MapContext;
import com.iver.cit.gvsig.fmap.core.FShape;
import com.iver.cit.gvsig.fmap.layers.FLayer;
import com.iver.cit.gvsig.fmap.layers.FLayers;
import com.iver.cit.gvsig.fmap.layers.FLyrVect;
import com.iver.cit.gvsig.fmap.layers.LayersIterator;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import java.awt.Font;
import javax.swing.JRadioButton;
import javax.swing.JTabbedPane;
import javax.swing.border.TitledBorder;
import java.awt.Color;

/**
 * 
 * @author David Pinheiro
 */
public class TesteJPanel extends JPanel implements IWindow {

	public static int TIME_SECONDS = 0;
	public static int TIME_MINUTES = 1;
	public static int LENGTH_METERS = 0;
	public static int LENGTH_KILOMETERS = 1;
	public static int LENGTH_YARDS = 2;
	public static int LENGTH_MILES = 3;
	public static int FILE_FORMAT_2_COLS = 0;
	public static int FILE_FORMAT_MANY_COLS = 1;

	private MapContext mapContext;
	
	private DefaultComboBoxModel cboLayerOriginsModel;
	private DefaultComboBoxModel cboLayerDestinationsModel;

	private WindowInfo wi;
	private boolean okPressed = false;

	/**
	 * This method initializes txtFormatAreaDescription	
	 * 	
	 * @return javax.swing.JTextArea	
	 */
/*	private JTextArea getTxtFormatAreaDescription() {
		if (txtFormatAreaDescription == null) {
			txtFormatAreaDescription = new JTextArea();
			txtFormatAreaDescription.setBounds(new Rectangle(16, 55, 438, 53));
			txtFormatAreaDescription.setRows(3);
			txtFormatAreaDescription.setFont(new Font("Arial", Font.PLAIN, 10));
			txtFormatAreaDescription.setLineWrap(true);
			txtFormatAreaDescription.setEditable(false);
		}
		return txtFormatAreaDescription;
	}*/

	public static void main(String[] args) throws ClassNotFoundException,
			InstantiationException, IllegalAccessException {
		try {

			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		VRPControlPanel panel = new VRPControlPanel();
		JFrame test = new JFrame();

		test.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		test.getContentPane().add(panel);
		test.setBounds(panel.getBounds());
		test.setVisible(true);
	}

	/** Creates new form OdMatrixControlPanel */
	public TesteJPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		this.setLayout(null);
		this.setSize(new Dimension(499, 350));
		cboFileFormat = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		btnCancel = new javax.swing.JButton();
//		jPanel1.add(cboFileFormat, null);
//		jPanel1.add(jLabel5, null);

//		jPanel1.add(getTxtFormatAreaDescription(), null);
		IODMatrixFileWriter[] writers = ODMatrixExtension.getOdMatrixWriters();
		String[] formats = new String[writers.length];
		for (int i = 0; i < formats.length; i++) {
			formats[i] = _T(writers[i].getFormatDescription());
		}
		cboFileFormat.setModel(new DefaultComboBoxModel(formats));
		cboFileFormat.setSelectedIndex(0);

		cboFileFormat.setBounds(new Rectangle(158, 19, 295, 25));
		cboFileFormat.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent e) {
				System.out.println(e.getItem());
				
				txtFormatAreaDescription.setText(e.getItem().toString());
			}
		});
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel5.setBounds(new Rectangle(17, 22, 134, 16));
		jLabel5.setText(_T("File_Format") + ":");

		btnCancel.setText(_T("Cancel"));
		btnCancel.setBounds(new Rectangle(257, 305, 136, 26));
		this.add(btnCancel, null);
		btnOk = new javax.swing.JButton();
		btnOk.setBounds(99, 305, 136, 26);
		add(btnOk);
		btnOk.setText(_T("OK"));
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setBounds(10, 11, 472, 287);
		add(tabbedPane);
		jPanel2 = new javax.swing.JPanel();
		tabbedPane.addTab("ODMatrix", null, jPanel2, null);
//		cboLayerDestinations = new javax.swing.JComboBox();
//		jLblLayerDestinations = new javax.swing.JLabel();
		jLblFile = new javax.swing.JLabel();
		txtGeneratedFile = new javax.swing.JTextField();
		btnSelectFile = new javax.swing.JButton();
			
		jPanel2.setLayout(null);
							
		// jPanel2.setLayout(new GridBagLayout(jPanel2, BoxLayout.Y_AXIS));
		jPanel2.setBorder(javax.swing.BorderFactory
		.createTitledBorder(_T("Parameters")));
												
//		cboLayerDestinations.setBounds(new Rectangle(158, 61, 259, 22));
//		jLblLayerDestinations.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
//		jLblLayerDestinations.setBounds(new Rectangle(17, 59, 135, 20));
//		jLblLayerDestinations.setText(_T("Layer_Destinations") + ":");
										
		jLblFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLblFile.setBounds(new Rectangle(10, 102, 135, 20));
		jLblFile.setText(_T("Generated_File") + ":");
														
		txtGeneratedFile.setText("");
															
		txtGeneratedFile.setBounds(new Rectangle(152, 102, 259, 22));
		btnSelectFile.setText("...");
																		
		btnSelectFile.setBounds(new Rectangle(418, 102, 28, 21));
		btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
//TODO: O ficheiro deverá ser gravado (e depois aberto) com um determinado tipo de extensão			
			public void actionPerformed(java.awt.event.ActionEvent e) {
				JFileChooser dlg = new JFileChooser();
				if (dlg.showSaveDialog((Component) PluginServices.getMainFrame()) == JFileChooser.APPROVE_OPTION)
				{
					txtGeneratedFile.setText(dlg.getSelectedFile().getPath());
				}
			}
		});
//		jPanel2.add(jLblLayerDestinations, null);
//		jPanel2.add(cboLayerDestinations, null);
		jPanel2.add(jLblFile, null);
		jPanel2.add(txtGeneratedFile, null);
		jPanel2.add(btnSelectFile, null);
																						
		JPanel panel = new JPanel();
		panel.setBorder(new TitledBorder(UIManager.getBorder("TitledBorder.border"), "Vehicles", TitledBorder.LEADING, TitledBorder.TOP, null, new Color(0, 70, 213)));
		tabbedPane.addTab("Vehicles", null, panel, null);
		panel.setLayout(null);
		
		textField = new JTextField();
		textField.setBounds(165, 27, 125, 20);
		panel.add(textField);
		textField.setColumns(10);
		
		JLabel lblDepot = new JLabel("Depot");
		lblDepot.setHorizontalAlignment(SwingConstants.RIGHT);
		lblDepot.setBounds(63, 30, 92, 14);
		panel.add(lblDepot);
		
		JLabel lblNumOfVehicles = new JLabel("Num of vehicles");
		lblNumOfVehicles.setHorizontalAlignment(SwingConstants.RIGHT);
		lblNumOfVehicles.setBounds(63, 61, 92, 14);
		panel.add(lblNumOfVehicles);
		
		textField_1 = new JTextField();
		textField_1.setBounds(165, 58, 125, 20);
		panel.add(textField_1);
		textField_1.setColumns(10);

		btnOk.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOkActionPerformed(evt);
			}
		});
		btnCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCancelActionPerformed(evt);
			}
		});

	}// </editor-fold>

	private void closeWindow() {
		if (PluginServices.getMainFrame() != null) {
			PluginServices.getMDIManager().closeWindow(this);
		}
	}

	private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {
// TODO: Remover este código (em que o utilizador escolhia o ficheiro onde gravar a matrix de distâncias)
// TODO: Colocar verificação se o ficheiro consegue ser aberto (permissões).		
/*		if (getGeneratedFile().equalsIgnoreCase(""))
		{
			JOptionPane.showMessageDialog((Component) PluginServices.getMDIManager().getActiveWindow(),
					PluginServices.getText(null, "Please_select_a_valid_file"));
			return;
		}*/
/*		try {
			double tol = getTolerance();
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog((Component) PluginServices.getMDIManager().getActiveWindow(),
					PluginServices.getText(null, "Please_enter_a_valid_number"));
			return;
		}*/
		
		okPressed = true;
		closeWindow();
	}

	private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {
		closeWindow();
	}
	
	/**
	 * @return Returns the okPressed.
	 */
	public boolean isOkPressed() {
		return okPressed;
	}

	// Variables declaration - do not modify
	private javax.swing.JButton btnCancel;
	private javax.swing.JButton btnOk;
	private javax.swing.JButton btnSelectFile;
	private javax.swing.JComboBox cboFileFormat;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLblFile;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JTextField txtGeneratedFile;
	private javax.swing.JComboBox cboLayerOrigins;
	private JLabel jLblTolerance = null;
	private JLabel jLblToleranceUnits = null;
	private JTextArea txtFormatAreaDescription = null;
	private JTextField textField;
	private JTextField textField_1;

	// End of variables declaration

	public void setMapContext(MapContext mapContext) throws BaseException {
		this.mapContext = mapContext;
		FLayers layers = mapContext.getLayers();
		LayersIterator it = new LayersIterator(layers);
		Vector<FLyrVect> arrayLayers = new Vector<FLyrVect>();
		while (it.hasNext()) {
			FLayer lyr = it.nextLayer();
			if (!lyr.isAvailable())
				continue;
			if (lyr instanceof FLyrVect) {
				FLyrVect lyrVect = (FLyrVect) lyr;
				if ((lyrVect.getShapeType() == FShape.POINT)
						|| (lyrVect.getShapeType() == FShape.MULTIPOINT))
					arrayLayers.add(lyrVect);
					
			}
		}
		cboLayerOriginsModel = new DefaultComboBoxModel(arrayLayers);
//		cboLayerDestinationsModel = new DefaultComboBoxModel(arrayLayers);
		cboLayerDestinationsModel = cboLayerOriginsModel;
		cboLayerOrigins.setModel(cboLayerOriginsModel);
//		cboLayerDestinations.setModel(cboLayerDestinationsModel);
		cboLayerOrigins.setRenderer(new LayerListCellRenderer());
//		cboLayerDestinations.setRenderer(new LayerListCellRenderer());
	}

	public int getFileFormat() {
		return cboFileFormat.getSelectedIndex();
	}
	
	public String getGeneratedFile() {
		return txtGeneratedFile.getText();
	}
	
	public FLyrVect getOriginsLayer() {
		return (FLyrVect) cboLayerOrigins.getSelectedItem();
	}
//TODO: Remover a layer de destino pois não é necessário para o plugin vrp
	public FLyrVect getDestinationsLayer() {
		return (FLyrVect) cboLayerOrigins.getSelectedItem();
	}

	public WindowInfo getWindowInfo() {
		if (wi == null) {
			wi = new WindowInfo(WindowInfo.MODALDIALOG);
			wi.setWidth((int) this.getPreferredSize().getWidth());
			wi.setHeight((int) this.getPreferredSize().getHeight());
			wi.setTitle(_T("odmatrix_control_panel"));
		}
		return wi;
	}
	
	public Object getWindowProfile(){
		return WindowInfo.DIALOG_PROFILE;
	}

	public double getTolerance() {
//		return Double.parseDouble(txtTolerance.getText());
		return 0;
	}
	
	private String _T(String str) {
		return PluginServices.getText(this, str);
	}
} // @jve:decl-index=0:visual-constraint="10,10"
